{"version":3,"sources":["scripts.js"],"names":["firstName","document","querySelector","secondName","fullName","firstNameVal","BehaviorSubject","secondNameVal","changeNameFn","subject","value","next","errorFn","err","console","error","firstNameChange","secondNameChange","subscribe","innerHTML","Observable","fromEvent","pluck"],"mappings":";;AAAA;;;;;;AAEA,IAAMA,YAAYC,SAASC,aAAT,CAAuB,aAAvB,CAAlB;AACA,IAAMC,aAAaF,SAASC,aAAT,CAAuB,cAAvB,CAAnB;AACA,IAAME,WAAWH,SAASC,aAAT,CAAuB,YAAvB,CAAjB;;AAEA,IAAIG,eAAe,IAAI,aAAGC,eAAP,CAAuB,EAAvB,CAAnB;AACA,IAAIC,gBAAgB,IAAI,aAAGD,eAAP,CAAuB,EAAvB,CAApB;;AAEA,IAAME,eAAe,SAAfA,YAAe,CAACC,OAAD,EAAa;AAC9B,WAAO,UAACC,KAAD,EAAW;AACdD,gBAAQE,IAAR,CAAaD,KAAb;AACH,KAFD;AAGH,CAJD;;AAMA,IAAME,UAAU,SAAVA,OAAU,CAACC,GAAD;AAAA,WAASC,QAAQC,KAAR,CAAcF,GAAd,CAAT;AAAA,CAAhB;;AAEA,IAAMG,kBAAkBR,aAAaH,YAAb,CAAxB;AACA,IAAMY,mBAAmBT,aAAaD,aAAb,CAAzB;;AAEAF,aAAaa,SAAb,CAAuB,UAACR,KAAD,EAAW;AAC9BN,aAASe,SAAT,GAAwBT,KAAxB,SAAiCH,cAAcG,KAA/C;AACH,CAFD;;AAIAH,cAAcW,SAAd,CAAwB,UAACR,KAAD,EAAW;AAC/BN,aAASe,SAAT,GAAwBd,aAAaK,KAArC,SAA8CA,KAA9C;AACH,CAFD;;AAKA,aAAGU,UAAH,CAAcC,SAAd,CAAwBrB,SAAxB,EAAmC,OAAnC,EACKsB,KADL,CACW,QADX,EACqB,OADrB,EAEKJ,SAFL,CAEgBF,eAFhB,EAEiCJ,OAFjC;;AAIA,aAAGQ,UAAH,CAAcC,SAAd,CAAwBlB,UAAxB,EAAoC,OAApC,EACKmB,KADL,CACW,QADX,EACqB,OADrB,EAEKJ,SAFL,CAEgBD,gBAFhB,EAEkCL,OAFlC","file":"../scripts.js","sourcesContent":["import Rx from 'rxjs/Rx';\n\nconst firstName = document.querySelector('#first-name');\nconst secondName = document.querySelector('#second-name');\nconst fullName = document.querySelector('#full-name');\n\nlet firstNameVal = new Rx.BehaviorSubject('');\nlet secondNameVal = new Rx.BehaviorSubject('');\n\nconst changeNameFn = (subject) => {\n    return (value) => {\n        subject.next(value);\n    }\n};\n\nconst errorFn = (err) => console.error(err);\n\nconst firstNameChange = changeNameFn(firstNameVal);\nconst secondNameChange = changeNameFn(secondNameVal);\n\nfirstNameVal.subscribe((value) => {\n    fullName.innerHTML = `${value} ${secondNameVal.value}`;\n});\n\nsecondNameVal.subscribe((value) => {\n    fullName.innerHTML = `${firstNameVal.value} ${value}`;\n});\n\n\nRx.Observable.fromEvent(firstName, 'keyup')\n    .pluck('target', 'value')\n    .subscribe (firstNameChange, errorFn);\n\nRx.Observable.fromEvent(secondName, 'keyup')\n    .pluck('target', 'value')\n    .subscribe (secondNameChange, errorFn);"]}